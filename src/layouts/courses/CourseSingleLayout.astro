---
import { getEntry } from "astro:content";
import tinycolor from "tinycolor2";
import CourseDecoBottom from "../../components/courses/CourseDecoBottom.astro";
import CourseDecoTop from "../../components/courses/CourseDecoTop.astro";
import PlaceBox from "../../components/PlaceBox.astro";
import Layout from "../Layout.astro";

const {
  frontmatter: { title, frontColor, bannerSrc, registrationUrl, placeList },
} = Astro.props;

const resolvedPlaceList = placeList
  ? await Promise.all(
      placeList.map(async ({ place }: { place: any }) => {
        // Extract slug from Tina's full path
        const slug = place.split("/").pop().replace(".json", "");
        // Get the entry using the slug
        const placeEntry = await getEntry("places", slug);
        return {
          place: placeEntry.data,
        };
      }),
    )
  : null;

const pageColor = tinycolor(frontColor).lighten(55).toString();
---

<Layout title={`${title} | Backbeat`} class="bg-lime-400">
  <CourseDecoTop />

  <div
    class="flex flex-col max-w-screen-lg mx-auto m-12 border-8 border-lime-600"
    style={`background-color: ${pageColor};`}
  >
    <div style={`background-color: ${frontColor}`}>
      <h1 class="text-4xl p-4 text-center text-white oswald">
        {title}
      </h1>
    </div>
    <div class="flex items-center max-h-[240px] overflow-hidden">
      <img
        src={bannerSrc}
        alt="BanniÃ¨re du cours actuel"
        class="w-full object-cover"
      />
    </div>
    <div class="p-12">
      <div
        class="prose max-w-prose mx-auto prose-headers:font-bold
      prose-h1:text-3xl prose-h1:text-center prose-h1:uppercase
      prose-h2:text-2xl prose-h2:font-bold prose-h1:uppercase
      prose-h3:text-xl prose-h2:font-bold prose-h1:uppercase
      prose-p:text-justify
      prose-li:my-0"
      >
        <slot />
      </div>
    </div>
    {
      resolvedPlaceList && (
        <div class="p-12">
          <div class="max-w-prose mx-auto">
            <h2 class="text-2xl font-bold mb-6">
              {resolvedPlaceList.length > 1 ? "Lieux" : "Lieu"}
            </h2>
          </div>
          <div class="max-w-prose mx-auto grid grid-cols-1 md:grid-cols-2 gap-6">
            {resolvedPlaceList.map(({ place }) => (
              <PlaceBox place={place} />
            ))}
          </div>
        </div>
      )
    }
    <div class="p-12 w-full flex">
      <div class="flex flex-grow justify-center items-center">
        <a
          style={`background-color: ${frontColor};`}
          class="p-8 text-xl text-white rounded-lg"
          href={registrationUrl}>Je m'inscris!</a
        >
      </div>
    </div>
  </div>
  <CourseDecoBottom />
</Layout>
