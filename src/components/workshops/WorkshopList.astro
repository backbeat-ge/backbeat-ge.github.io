---
import { getCollection } from "astro:content";
import { format } from "date-fns";
import tinycolor from "tinycolor2";

const lang = Astro.currentLocale as "fr" | "en";
const allWorkshops = await getCollection(
  "workshops",
  ({ id, data: { published } }) => {
    return id.startsWith(lang) && published;
  },
);

allWorkshops.sort((a, b) => {
  const dateA = new Date(a.data.fromDate);
  const dateB = new Date(b.data.fromDate);

  return dateB.getTime() - dateA.getTime();
});
---

<div
  class="mx-auto flex w-full max-w-screen-lg flex-grow flex-wrap items-center justify-center gap-4 p-4"
>
  {
    allWorkshops.length === 0 ? (
      <p class="text-center text-pink-800">
        {"en" === lang ? (
          <em>No workshops are currently programmed.</em>
        ) : (
          <em>Aucun atelier n'est actuellement programmé.</em>
        )}
      </p>
    ) : (
      allWorkshops.map((workshop) => {
        const borderColor = tinycolor(workshop.data.frontColor)
          .darken(5)
          .toString();
        const workshopUrl =
          "fr" === lang
            ? `/fr/ateliers/${workshop.slug.split("/").slice(1).join("/")}`
            : `/en/workshops/${workshop.slug.split("/").slice(1).join("/")}`;

        return (
          <a
            href={workshopUrl}
            class="flex flex-col w-full md:w-[calc(50%-1rem)] pb-0 my-6 border-8"
            style={`background-color: ${borderColor}; border-color: ${borderColor}`}
          >
            <img
              src={workshop.data.imageSrc}
              alt="Bannière du cours actuel"
              class="w-full object-cover"
            />
            <div class="flex flex-col text-white">
              <span class="flex-1 text-xl p-2 font-bold">
                {workshop.data.title}
              </span>
              <span class="flex-1 p-2 pt-0">
                {"fr" === lang ? (
                  <>
                    Du {format(new Date(workshop.data.fromDate), "dd.MM.yyyy")}{" "}
                    au {format(new Date(workshop.data.toDate), "dd.MM.yyyy")}
                  </>
                ) : (
                  <>
                    From{" "}
                    {format(new Date(workshop.data.fromDate), "dd.MM.yyyy")} to{" "}
                    {format(new Date(workshop.data.toDate), "dd.MM.yyyy")}
                  </>
                )}
              </span>
            </div>
          </a>
        );
      })
    )
  }
</div>
